---
import BaseLayout from './BaseLayout.astro';
import Header from '../components/Header.astro';
import Sidebar from '../components/Sidebar.astro';
import TableOfContents from '../components/TableOfContents.astro';

export interface Props {
  title: string;
  description?: string;
  headings?: Array<{ depth: number; text: string; slug: string }>;
}

const { title, description, headings = [] } = Astro.props;
---

<BaseLayout title={title} description={description}>
  <div class="docs-layout">
    <Header />
    <div class="docs-container">
      <Sidebar />
      <main class="docs-content">
        <article class="markdown-content">
          <h1>{title}</h1>
          <slot />
        </article>
      </main>
      {headings.length > 0 && <TableOfContents headings={headings} />}
    </div>
  </div>
</BaseLayout>

<style>
  .docs-layout {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }

  .docs-container {
    display: grid;
    grid-template-columns: 260px 1fr 220px;
    gap: 2rem;
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem 1rem;
    flex: 1;
  }

  .docs-content {
    min-width: 0;
    max-width: 100%;
  }

  .markdown-content {
    max-width: 720px;
  }

  .markdown-content h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    color: var(--color-text);
  }

  @media (max-width: 1280px) {
    .docs-container {
      grid-template-columns: 260px 1fr;
    }
  }

  @media (max-width: 768px) {
    .docs-container {
      grid-template-columns: 1fr;
      padding: 1rem;
    }
  }
</style>

<style is:global>
  /* Markdown content styles */
  .markdown-content h2 {
    font-size: 1.875rem;
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  .markdown-content h3 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }

  .markdown-content h4 {
    font-size: 1.25rem;
    font-weight: 600;
    margin-top: 1rem;
    margin-bottom: 0.5rem;
  }

  .markdown-content p {
    margin-bottom: 1rem;
    line-height: 1.75;
  }

  .markdown-content ul,
  .markdown-content ol {
    margin-bottom: 1rem;
    padding-left: 2rem;
  }

  .markdown-content li {
    margin-bottom: 0.25rem;
  }

  .markdown-content code {
    font-family: var(--font-mono);
    font-size: 0.875em;
    background-color: var(--color-code-bg);
    color: var(--color-code-text);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
  }

  .markdown-content pre {
    font-family: var(--font-mono);
    font-size: 0.875rem;
    background-color: var(--color-code-bg);
    color: var(--color-code-text);
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin-bottom: 1rem;
  }

  .markdown-content pre code {
    background-color: transparent;
    padding: 0;
  }

  .markdown-content table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 1rem;
  }

  .markdown-content th,
  .markdown-content td {
    border: 1px solid var(--color-border);
    padding: 0.5rem 1rem;
    text-align: left;
  }

  .markdown-content th {
    background-color: var(--color-code-bg);
    font-weight: 600;
  }

  .markdown-content blockquote {
    border-left: 4px solid var(--color-primary);
    padding-left: 1rem;
    margin-bottom: 1rem;
    font-style: italic;
    color: var(--color-text);
    opacity: 0.9;
  }

  .markdown-content hr {
    border: none;
    border-top: 1px solid var(--color-border);
    margin: 2rem 0;
  }

  .markdown-content a {
    color: var(--color-primary);
    text-decoration: none;
  }

  .markdown-content a:hover {
    text-decoration: underline;
  }

  /* Task lists */
  .markdown-content input[type="checkbox"] {
    margin-right: 0.5rem;
  }

  /* Footnotes */
  .markdown-content .footnotes {
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 1px solid var(--color-border);
    font-size: 0.875rem;
  }
</style>